{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/ (unsupported edge import 'crypto')"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`crypto`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\nimport { withAccelerate } from '@prisma/extension-accelerate'\n\nconst globalForPrisma = globalThis as unknown as {\n    prisma: ReturnType<typeof createPrismaClient> | undefined\n}\n\nfunction createPrismaClient() {\n    const prisma = new PrismaClient().$extends(withAccelerate())\n\n    return prisma\n}\n\nexport const prisma = globalForPrisma.prisma ?? createPrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,kBAAkB;AAIxB,SAAS;IACL,MAAM,SAAS,IAAI,qKAAY,GAAG,QAAQ,CAAC,IAAA,8LAAc;IAEzD,OAAO;AACX;AAEO,MAAM,SAAS,gBAAgB,MAAM,IAAI;AAEhD,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/auth.ts"],"sourcesContent":["import NextAuth, { NextAuthConfig } from 'next-auth'\nimport Credentials from 'next-auth/providers/credentials'\nimport bcrypt from 'bcryptjs'\nimport { prisma } from './prisma'\nimport { UserRole } from '@prisma/client'\n\nexport const authConfig: NextAuthConfig = {\n    pages: {\n        signIn: '/login',\n        error: '/login'\n    },\n    callbacks: {\n        async jwt({ token, user }) {\n            if (user) {\n                token.role = user.role\n                token.id = user.id\n            }\n            return token\n        },\n        async session({ session, token }) {\n            if (session.user) {\n                session.user.id = token.id as string\n                session.user.role = token.role as UserRole\n            }\n            return session\n        }\n    },\n    providers: [\n        Credentials({\n            name: 'credentials',\n            credentials: {\n                email: { label: 'Email', type: 'email' },\n                password: { label: 'Password', type: 'password' }\n            },\n            async authorize(credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null\n                }\n\n                const user = await prisma.user.findUnique({\n                    where: {\n                        email: credentials.email as string\n                    }\n                })\n\n                if (!user || !user.password) {\n                    return null\n                }\n\n                const isPasswordValid = await bcrypt.compare(\n                    credentials.password as string,\n                    user.password\n                )\n\n                if (!isPasswordValid) {\n                    return null\n                }\n\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    role: user.role\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: 'jwt'\n    },\n    secret: process.env.NEXTAUTH_SECRET\n}\n\nexport const { handlers, signIn, signOut, auth } = NextAuth(authConfig)\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;;;;;AAGO,MAAM,aAA6B;IACtC,OAAO;QACH,QAAQ;QACR,OAAO;IACX;IACA,WAAW;QACP,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACrB,IAAI,MAAM;gBACN,MAAM,IAAI,GAAG,KAAK,IAAI;gBACtB,MAAM,EAAE,GAAG,KAAK,EAAE;YACtB;YACA,OAAO;QACX;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC5B,IAAI,QAAQ,IAAI,EAAE;gBACd,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAClC;YACA,OAAO;QACX;IACJ;IACA,WAAW;QACP,IAAA,6KAAW,EAAC;YACR,MAAM;YACN,aAAa;gBACT,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YACpD;YACA,MAAM,WAAU,WAAW;gBACvB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBAC/C,OAAO;gBACX;gBAEA,MAAM,OAAO,MAAM,+HAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBACtC,OAAO;wBACH,OAAO,YAAY,KAAK;oBAC5B;gBACJ;gBAEA,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;oBACzB,OAAO;gBACX;gBAEA,MAAM,kBAAkB,MAAM,oJAAM,CAAC,OAAO,CACxC,YAAY,QAAQ,EACpB,KAAK,QAAQ;gBAGjB,IAAI,CAAC,iBAAiB;oBAClB,OAAO;gBACX;gBAEA,OAAO;oBACH,IAAI,KAAK,EAAE;oBACX,OAAO,KAAK,KAAK;oBACjB,MAAM,KAAK,IAAI;oBACf,MAAM,KAAK,IAAI;gBACnB;YACJ;QACJ;KACH;IACD,SAAS;QACL,UAAU;IACd;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACvC;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAA,wKAAQ,EAAC"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { auth } from '@/lib/auth'\nimport { UserRole } from '@prisma/client'\n\nexport default auth((req) => {\n  const { pathname } = req.nextUrl\n  const session = req.auth\n\n  // Public routes\n  const publicRoutes = ['/', '/login', '/register', '/register-vendor', '/products']\n  const isPublicRoute = publicRoutes.some(route => pathname === route || pathname.startsWith(`${route}/`))\n\n  if (isPublicRoute) {\n    return NextResponse.next()\n  }\n\n  // API routes\n  if (pathname.startsWith('/api/auth')) {\n    return NextResponse.next()\n  }\n\n  // Protected routes\n  if (!session) {\n    return NextResponse.redirect(new URL('/login', req.url))\n  }\n\n  // Admin routes\n  if (pathname.startsWith('/admin')) {\n    if (session.user.role !== 'ADMIN') {\n      return NextResponse.redirect(new URL('/unauthorized', req.url))\n    }\n  }\n\n  // Vendor routes\n  if (pathname.startsWith('/vendor')) {\n    if (session.user.role !== 'VENDOR' && session.user.role !== 'ADMIN') {\n      return NextResponse.redirect(new URL('/unauthorized', req.url))\n    }\n  }\n\n  return NextResponse.next()\n})\n\nexport const config = {\n  matcher: ['/((?!_next/static|_next/image|favicon.ico).*)']\n}\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAEA;;;uCAGe,IAAA,2HAAI,EAAC,CAAC;IACnB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAChC,MAAM,UAAU,IAAI,IAAI;IAExB,gBAAgB;IAChB,MAAM,eAAe;QAAC;QAAK;QAAU;QAAa;QAAoB;KAAY;IAClF,MAAM,gBAAgB,aAAa,IAAI,CAAC,CAAA,QAAS,aAAa,SAAS,SAAS,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;IAEtG,IAAI,eAAe;QACjB,OAAO,gMAAY,CAAC,IAAI;IAC1B;IAEA,aAAa;IACb,IAAI,SAAS,UAAU,CAAC,cAAc;QACpC,OAAO,gMAAY,CAAC,IAAI;IAC1B;IAEA,mBAAmB;IACnB,IAAI,CAAC,SAAS;QACZ,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,eAAe;IACf,IAAI,SAAS,UAAU,CAAC,WAAW;QACjC,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,SAAS;YACjC,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,IAAI,GAAG;QAC/D;IACF;IAEA,gBAAgB;IAChB,IAAI,SAAS,UAAU,CAAC,YAAY;QAClC,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAK,YAAY,QAAQ,IAAI,CAAC,IAAI,KAAK,SAAS;YACnE,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,IAAI,GAAG;QAC/D;IACF;IAEA,OAAO,gMAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAgD;AAC5D"}}]
}